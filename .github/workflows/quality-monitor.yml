name: Quality Regression Detection

on:
  pull_request:
    paths:
      - 'eslint.config.*'
      - '.github/workflows/**'
      - 'jest.config.*'
      - 'tsconfig.json'
      - 'package.json'
      - '.lintstagedrc.json'
      - '.husky/**'

jobs:
  quality-regression-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Detect Quality Rule Changes
        run: |
          echo "🔍 品質ルール変更検知中..."

          # ESLint設定の'off'設定を検知
          if grep -rE ":\s*['\"]off['\"]" eslint.config.* 2>/dev/null; then
            echo "❌ ESLintルールの無効化を検出しました"
            echo "型安全性ルールは'warn'または'error'に設定してください"
            exit 1
          fi

          # CI/CDの失敗隠蔽を検知（レポート生成や検索コマンド自体は除外）
          if grep -r "|| true" .github/workflows/ 2>/dev/null | \
             grep -v "eslint-report\.json" | \
             grep -v "coverage-report\.txt" | \
             grep -v "TODO\\|FIXME" | \
             grep -v "npm outdated" | \
             grep -v "grep -r \"|| true\"" | \
             grep -v "LINT_OUTPUT" | \
             grep -v "TS_OUTPUT" | \
             grep -v "# \\|| true"; then
            echo "❌ CI/CDワークフローでの失敗隠蔽を検出しました"
            echo "'|| true'を削除してください"
            exit 1
          fi

          # --passWithNoTestsの常用を検知
          if grep -r -- "--passWithNoTests" .github/workflows/ package.json .lintstagedrc.json 2>/dev/null | grep -v "# " | grep -v "// "; then
            echo "⚠️ --passWithNoTestsの使用を検出しました"
            echo "テストが存在することを確認してください"
          fi

          # --no-verifyの使用を検知
          if grep -r -- "--no-verify" .husky/ 2>/dev/null; then
            echo "❌ pre-commitフックの回避を検出しました"
            echo "--no-verifyを削除してください"
            exit 1
          fi

          echo "✅ 品質ルールチェック完了"

      - name: Check TypeScript Configuration
        run: |
          echo "🔧 TypeScript設定チェック中..."

          # tsconfig.jsonが存在するか確認
          if [ ! -f "tsconfig.json" ]; then
            echo "❌ tsconfig.jsonが見つかりません"
            exit 1
          fi

          echo "✅ TypeScript設定チェック完了"

      - name: Validate Quality Standards
        run: |
          echo "📊 品質基準検証中..."

          # package.jsonのスクリプトを確認
          if ! grep -q '"lint"' package.json; then
            echo "❌ lintスクリプトが定義されていません"
            exit 1
          fi

          if ! grep -q '"test"' package.json; then
            echo "❌ testスクリプトが定義されていません"
            exit 1
          fi

          if ! grep -q '"build"' package.json; then
            echo "❌ buildスクリプトが定義されていません"
            exit 1
          fi

          echo "✅ 品質基準検証完了"

      - name: Generate Quality Report
        if: always()
        run: |
          echo "📋 品質設定変更サマリー"
          echo "===================="

          # 変更されたファイルを表示
          echo "変更されたファイル:"
          git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E "(eslint|jest|tsconfig|workflow)" || echo "なし"

          echo ""
          echo "品質チェック結果:"
          echo "- ESLintルール無効化: $(grep -rE ":\s*['\"]off['\"]" eslint.config.* 2>/dev/null | wc -l || echo "0")個"
          echo "- CI/CD失敗隠蔽: $(grep -r "|| true" .github/workflows/ 2>/dev/null | grep -v "eslint-report" | grep -v "coverage-report" | grep -v "TODO\\|FIXME" | grep -v "npm outdated" | grep -v "grep -r" | grep -v "LINT_OUTPUT" | grep -v "TS_OUTPUT" | grep -v "# \\|| true" | wc -l || echo "0")個"
          echo "- TypeScript設定: $([ -f "tsconfig.json" ] && echo "有効" || echo "無効")"
