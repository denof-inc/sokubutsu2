{"file":"/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/src/domain/telegram/telegram.controller.ts","mappings":"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","names":[],"sources":["/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/src/domain/telegram/telegram.controller.ts"],"sourcesContent":["import { Controller, Post, Body, UseGuards, Logger } from '@nestjs/common';\nimport {\n  TelegramAuthGuard,\n  TelegramWebhookGuard,\n  RateLimitGuard,\n} from '../../common/guards';\nimport {\n  CurrentUser,\n  TelegramUser,\n  IsNewUser,\n} from '../../core/auth/decorators/telegram-user.decorator';\nimport { User } from '../users/entities/user.entity';\nimport {\n  TelegramUpdate,\n  TelegramUser as ITelegramUser,\n} from '../../common/interfaces';\nimport { AuthService } from '../../core/auth/auth.service';\nimport { TelegramService } from './telegram.service';\n\n@Controller('telegram')\nexport class TelegramController {\n  private readonly logger = new Logger(TelegramController.name);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly telegramService: TelegramService,\n  ) {}\n\n  /**\n   * Telegram Webhook エンドポイント\n   */\n  @Post('webhook')\n  @UseGuards(TelegramWebhookGuard, TelegramAuthGuard, RateLimitGuard)\n  async handleUpdate(\n    @Body() update: TelegramUpdate,\n    @CurrentUser() user: User,\n    @TelegramUser() telegramUser: ITelegramUser,\n    @IsNewUser() isNewUser: boolean,\n  ) {\n    this.logger.debug(`Received update: ${String(JSON.stringify(update))}`);\n\n    // メッセージがない場合は無視\n    if (!update.message || !update.message.text) {\n      return { ok: true };\n    }\n\n    const chatId = update.message.chat.id;\n    const text = update.message.text;\n\n    // コマンドの解析\n    const command = this.parseCommand(text);\n\n    try {\n      switch (command.name) {\n        case '/start':\n          await this.handleStartCommand(chatId, telegramUser, isNewUser);\n          break;\n\n        case '/add':\n          await this.handleAddCommand(chatId, user, command.args);\n          break;\n\n        case '/list':\n          await this.handleListCommand(chatId, user);\n          break;\n\n        case '/remove':\n          await this.handleRemoveCommand(chatId, user, command.args);\n          break;\n\n        case '/pause':\n          await this.handlePauseCommand(chatId, user, command.args);\n          break;\n\n        case '/resume':\n          await this.handleResumeCommand(chatId, user, command.args);\n          break;\n\n        case '/status':\n          await this.handleStatusCommand(chatId, user);\n          break;\n\n        case '/help':\n          await this.handleHelpCommand(chatId);\n          break;\n\n        default:\n          await this.telegramService.sendMessage(\n            chatId,\n            '不明なコマンドです。/help でコマンド一覧を確認してください。',\n          );\n      }\n    } catch (error) {\n      this.logger.error(`Command execution error:`, error);\n      await this.telegramService.sendMessage(\n        chatId,\n        'エラーが発生しました。しばらく待ってから再度お試しください。',\n      );\n    }\n\n    return { ok: true };\n  }\n\n  /**\n   * /start コマンドハンドラー\n   */\n  private async handleStartCommand(\n    chatId: number,\n    telegramUser: ITelegramUser,\n    _isNewUser: boolean,\n  ) {\n    const result = await this.authService.handleStartCommand(telegramUser);\n    await this.telegramService.sendMessage(chatId, result.welcomeMessage);\n  }\n\n  /**\n   * /add コマンドハンドラー\n   */\n  private async handleAddCommand(chatId: number, user: User, args: string[]) {\n    if (args.length === 0) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '使用方法: /add <URL>\\n例: /add https://www.example.com/property/123',\n      );\n      return;\n    }\n\n    const url = args[0];\n\n    // URL検証\n    if (!this.isValidUrl(url)) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '有効なURLを入力してください。',\n      );\n      return;\n    }\n\n    // TODO: URL追加処理を実装\n    await this.telegramService.sendMessage(\n      chatId,\n      `URL \"${url}\" を監視リストに追加しました！\\n新着物件が見つかり次第お知らせします。`,\n    );\n  }\n\n  /**\n   * /list コマンドハンドラー\n   */\n  private async handleListCommand(chatId: number, _user: User) {\n    // TODO: ユーザーの監視URL一覧を取得\n    const message = `\n📋 監視中のURL一覧:\n\n1. https://example.com/property/123\n   状態: 🟢 監視中\n   最終チェック: 5分前\n\n2. https://example.com/property/456\n   状態: ⏸️ 一時停止中\n   最終チェック: 1時間前\n\n登録数: 2件\n    `.trim();\n\n    await this.telegramService.sendMessage(chatId, message);\n  }\n\n  /**\n   * /remove コマンドハンドラー\n   */\n  private async handleRemoveCommand(\n    chatId: number,\n    user: User,\n    args: string[],\n  ) {\n    if (args.length === 0) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '使用方法: /remove <番号>\\n/list で番号を確認してください。',\n      );\n      return;\n    }\n\n    const index = parseInt(args[0]);\n    if (isNaN(index)) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '番号を正しく入力してください。',\n      );\n      return;\n    }\n\n    // TODO: URL削除処理を実装\n    await this.telegramService.sendMessage(\n      chatId,\n      `番号 ${String(index)} のURLを削除しました。`,\n    );\n  }\n\n  /**\n   * /pause コマンドハンドラー\n   */\n  private async handlePauseCommand(chatId: number, user: User, args: string[]) {\n    if (args.length === 0) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '使用方法: /pause <番号>\\n/list で番号を確認してください。',\n      );\n      return;\n    }\n\n    const index = parseInt(args[0]);\n    if (isNaN(index)) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '番号を正しく入力してください。',\n      );\n      return;\n    }\n\n    // TODO: 監視一時停止処理を実装\n    await this.telegramService.sendMessage(\n      chatId,\n      `番号 ${String(index)} の監視を一時停止しました。`,\n    );\n  }\n\n  /**\n   * /resume コマンドハンドラー\n   */\n  private async handleResumeCommand(\n    chatId: number,\n    user: User,\n    args: string[],\n  ) {\n    if (args.length === 0) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '使用方法: /resume <番号>\\n/list で番号を確認してください。',\n      );\n      return;\n    }\n\n    const index = parseInt(args[0]);\n    if (isNaN(index)) {\n      await this.telegramService.sendMessage(\n        chatId,\n        '番号を正しく入力してください。',\n      );\n      return;\n    }\n\n    // TODO: 監視再開処理を実装\n    await this.telegramService.sendMessage(\n      chatId,\n      `番号 ${String(index)} の監視を再開しました。`,\n    );\n  }\n\n  /**\n   * /status コマンドハンドラー\n   */\n  private async handleStatusCommand(chatId: number, user: User) {\n    // TODO: ユーザーの監視状況を取得\n    const message = `\n📊 監視状況:\n\n👤 ユーザー: ${user.fullName}\n📅 登録日: ${user.createdAt.toLocaleDateString('ja-JP')}\n🔍 監視中URL: 2件\n⏸️ 一時停止中: 1件\n🔔 通知設定: ${user.settings?.notifications.enabled ? 'ON' : 'OFF'}\n\n最終チェック: 5分前\n次回チェック: 10分後\n    `.trim();\n\n    await this.telegramService.sendMessage(chatId, message);\n  }\n\n  /**\n   * /help コマンドハンドラー\n   */\n  private async handleHelpCommand(chatId: number) {\n    const message = `\n📚 コマンド一覧:\n\n/start - ボットを開始\n/add <URL> - 監視URLを追加\n/list - 登録URL一覧を表示\n/remove <番号> - URLを削除\n/pause <番号> - 監視を一時停止\n/resume <番号> - 監視を再開\n/status - 監視状況を確認\n/help - このヘルプを表示\n\n❓ 使い方:\n1. /add でURLを登録\n2. 新着物件があれば自動通知\n3. /list で登録状況を確認\n\nお困りの場合は @sokubutsu_support までご連絡ください。\n    `.trim();\n\n    await this.telegramService.sendMessage(chatId, message);\n  }\n\n  /**\n   * コマンドをパース\n   */\n  private parseCommand(text: string): { name: string; args: string[] } {\n    const parts = text.trim().split(/\\s+/);\n    const name = parts[0].toLowerCase();\n    const args = parts.slice(1);\n\n    return { name, args };\n  }\n\n  /**\n   * URL検証\n   */\n  private isValidUrl(url: string): boolean {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n}\n"],"version":3}