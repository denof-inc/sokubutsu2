cabbe90b6b4c1fcc6e90f7a7c96cf383
"use strict";
// src/task-scheduler/task-scheduler.service.ts
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TaskSchedulerService_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaskSchedulerService = void 0;
const common_1 = require("@nestjs/common");
const cron = __importStar(require("node-cron"));
const url_service_1 = require("../../domain/url/url.service");
const scraping_service_1 = require("../scraping/scraping.service");
const notification_service_1 = require("../notification/notification.service");
let TaskSchedulerService = TaskSchedulerService_1 = class TaskSchedulerService {
    urlService;
    scrapingService;
    notificationService;
    logger = new common_1.Logger(TaskSchedulerService_1.name);
    constructor(urlService, scrapingService, notificationService) {
        this.urlService = urlService;
        this.scrapingService = scrapingService;
        this.notificationService = notificationService;
    }
    onModuleInit() {
        this.scheduleJobs();
    }
    scheduleJobs() {
        cron.schedule('* * * * *', async () => {
            this.logger.log('====== cronジョブを開始します ======');
            const urlsToScrape = await this.urlService.findAllActive();
            this.logger.log(`${String(urlsToScrape.length)}件のURLを監視します。`);
            for (const url of urlsToScrape) {
                await this.processUrl(url);
            }
            this.logger.log('====== 今回のcronジョブは完了しました ======');
        });
        this.logger.log('監視ジョブをスケジュールしました。');
    }
    async processUrl(url) {
        this.logger.log(`[${url.name}] の監視を実行中...`);
        const newHash = await this.scrapingService.scrapeAndGetHash(url.url, url.selector);
        if (!newHash) {
            this.logger.warn(`[${url.name}] のハッシュ値を取得できませんでした。`);
            return;
        }
        const oldHash = url.contentHash;
        this.logger.log(`[${url.name}] 古いハッシュ: ${oldHash ? oldHash.substring(0, 10) : 'なし'}...`);
        this.logger.log(`[${url.name}] 新しいハッシュ: ${newHash.substring(0, 10)}...`);
        if (oldHash !== newHash) {
            this.logger.log(`★★★★★ [${url.name}] 変更を検知しました！ ★★★★★`);
            await this.notificationService.sendNotification(`【ソクブツ速報】\n物件に新着の可能性があります！\n\n物件名: ${url.name}\nURL: ${url.url}`);
            await this.urlService.updateHash(url.id, newHash);
            this.logger.log(`[${url.name}] のハッシュ値を更新しました。`);
        }
        else {
            this.logger.log(`[${url.name}] 変更はありませんでした。`);
        }
    }
};
exports.TaskSchedulerService = TaskSchedulerService;
exports.TaskSchedulerService = TaskSchedulerService = TaskSchedulerService_1 = __decorate([
    (0, common_1.Injectable)(),
    __metadata("design:paramtypes", [url_service_1.UrlService,
        scraping_service_1.ScrapingService,
        notification_service_1.NotificationService])
], TaskSchedulerService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3R0dGVsYS9Eb2N1bWVudHMvV29yay9kZW5vZi93b3Jrcy8yNTA1Mjlzb2t1YnV0c3UvZGV2Mi9zcmMvZmVhdHVyZXMvdGFzay1zY2hlZHVsZXIvdGFzay1zY2hlZHVsZXIuc2VydmljZS50cyIsIm1hcHBpbmdzIjoiO0FBQUEsK0NBQStDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRS9DLDJDQUFrRTtBQUNsRSxnREFBa0M7QUFDbEMsOERBQTBEO0FBQzFELG1FQUErRDtBQUMvRCwrRUFBMkU7QUFJcEUsSUFBTSxvQkFBb0IsNEJBQTFCLE1BQU0sb0JBQW9CO0lBSVo7SUFDQTtJQUNBO0lBTEYsTUFBTSxHQUFHLElBQUksZUFBTSxDQUFDLHNCQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBRWhFLFlBQ21CLFVBQXNCLEVBQ3RCLGVBQWdDLEVBQ2hDLG1CQUF3QztRQUZ4QyxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUNoQyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO0lBQ3hELENBQUM7SUFFSixZQUFZO1FBQ1YsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFTyxZQUFZO1FBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEtBQUssSUFBSSxFQUFFO1lBQ3BDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLDZCQUE2QixDQUFDLENBQUM7WUFDL0MsTUFBTSxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQzNELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7WUFFOUQsS0FBSyxNQUFNLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztnQkFDL0IsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzdCLENBQUM7WUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1FBQ3JELENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRU8sS0FBSyxDQUFDLFVBQVUsQ0FBQyxHQUFRO1FBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksY0FBYyxDQUFDLENBQUM7UUFDNUMsTUFBTSxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUN6RCxHQUFHLENBQUMsR0FBRyxFQUNQLEdBQUcsQ0FBQyxRQUFRLENBQ2IsQ0FBQztRQUVGLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNiLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksc0JBQXNCLENBQUMsQ0FBQztZQUNyRCxPQUFPO1FBQ1QsQ0FBQztRQUVELE1BQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7UUFDaEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQ2IsSUFBSSxHQUFHLENBQUMsSUFBSSxhQUFhLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUN4RSxDQUFDO1FBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQ2IsSUFBSSxHQUFHLENBQUMsSUFBSSxjQUFjLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQ3hELENBQUM7UUFFRixJQUFJLE9BQU8sS0FBSyxPQUFPLEVBQUUsQ0FBQztZQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLG9CQUFvQixDQUFDLENBQUM7WUFDeEQsTUFBTSxJQUFJLENBQUMsbUJBQW1CLENBQUMsZ0JBQWdCLENBQzdDLHFDQUFxQyxHQUFHLENBQUMsSUFBSSxVQUFVLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FDakUsQ0FBQztZQUNGLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUNsRCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLGtCQUFrQixDQUFDLENBQUM7UUFDbEQsQ0FBQzthQUFNLENBQUM7WUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLGdCQUFnQixDQUFDLENBQUM7UUFDaEQsQ0FBQztJQUNILENBQUM7Q0FDRixDQUFBO0FBM0RZLG9EQUFvQjsrQkFBcEIsb0JBQW9CO0lBRGhDLElBQUEsbUJBQVUsR0FBRTtxQ0FLb0Isd0JBQVU7UUFDTCxrQ0FBZTtRQUNYLDBDQUFtQjtHQU5oRCxvQkFBb0IsQ0EyRGhDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy90dHRlbGEvRG9jdW1lbnRzL1dvcmsvZGVub2Yvd29ya3MvMjUwNTI5c29rdWJ1dHN1L2RldjIvc3JjL2ZlYXR1cmVzL3Rhc2stc2NoZWR1bGVyL3Rhc2stc2NoZWR1bGVyLnNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3Rhc2stc2NoZWR1bGVyL3Rhc2stc2NoZWR1bGVyLnNlcnZpY2UudHNcblxuaW1wb3J0IHsgSW5qZWN0YWJsZSwgTG9nZ2VyLCBPbk1vZHVsZUluaXQgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgKiBhcyBjcm9uIGZyb20gJ25vZGUtY3Jvbic7XG5pbXBvcnQgeyBVcmxTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vZG9tYWluL3VybC91cmwuc2VydmljZSc7XG5pbXBvcnQgeyBTY3JhcGluZ1NlcnZpY2UgfSBmcm9tICcuLi9zY3JhcGluZy9zY3JhcGluZy5zZXJ2aWNlJztcbmltcG9ydCB7IE5vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgVXJsIH0gZnJvbSAnLi4vLi4vZG9tYWluL3VybC91cmwuaW50ZXJmYWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRhc2tTY2hlZHVsZXJTZXJ2aWNlIGltcGxlbWVudHMgT25Nb2R1bGVJbml0IHtcbiAgcHJpdmF0ZSByZWFkb25seSBsb2dnZXIgPSBuZXcgTG9nZ2VyKFRhc2tTY2hlZHVsZXJTZXJ2aWNlLm5hbWUpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgdXJsU2VydmljZTogVXJsU2VydmljZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNjcmFwaW5nU2VydmljZTogU2NyYXBpbmdTZXJ2aWNlLFxuICAgIHByaXZhdGUgcmVhZG9ubHkgbm90aWZpY2F0aW9uU2VydmljZTogTm90aWZpY2F0aW9uU2VydmljZSxcbiAgKSB7fVxuXG4gIG9uTW9kdWxlSW5pdCgpIHtcbiAgICB0aGlzLnNjaGVkdWxlSm9icygpO1xuICB9XG5cbiAgcHJpdmF0ZSBzY2hlZHVsZUpvYnMoKSB7XG4gICAgY3Jvbi5zY2hlZHVsZSgnKiAqICogKiAqJywgYXN5bmMgKCkgPT4ge1xuICAgICAgdGhpcy5sb2dnZXIubG9nKCc9PT09PT0gY3JvbuOCuOODp+ODluOCkumWi+Wni+OBl+OBvuOBmSA9PT09PT0nKTtcbiAgICAgIGNvbnN0IHVybHNUb1NjcmFwZSA9IGF3YWl0IHRoaXMudXJsU2VydmljZS5maW5kQWxsQWN0aXZlKCk7XG4gICAgICB0aGlzLmxvZ2dlci5sb2coYCR7U3RyaW5nKHVybHNUb1NjcmFwZS5sZW5ndGgpfeS7tuOBrlVSTOOCkuebo+imluOBl+OBvuOBmeOAgmApO1xuXG4gICAgICBmb3IgKGNvbnN0IHVybCBvZiB1cmxzVG9TY3JhcGUpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcm9jZXNzVXJsKHVybCk7XG4gICAgICB9XG4gICAgICB0aGlzLmxvZ2dlci5sb2coJz09PT09PSDku4rlm57jga5jcm9u44K444On44OW44Gv5a6M5LqG44GX44G+44GX44GfID09PT09PScpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5sb2dnZXIubG9nKCfnm6Poppbjgrjjg6fjg5bjgpLjgrnjgrHjgrjjg6Xjg7zjg6vjgZfjgb7jgZfjgZ/jgIInKTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgcHJvY2Vzc1VybCh1cmw6IFVybCkge1xuICAgIHRoaXMubG9nZ2VyLmxvZyhgWyR7dXJsLm5hbWV9XSDjga7nm6PoppbjgpLlrp/ooYzkuK0uLi5gKTtcbiAgICBjb25zdCBuZXdIYXNoID0gYXdhaXQgdGhpcy5zY3JhcGluZ1NlcnZpY2Uuc2NyYXBlQW5kR2V0SGFzaChcbiAgICAgIHVybC51cmwsXG4gICAgICB1cmwuc2VsZWN0b3IsXG4gICAgKTtcblxuICAgIGlmICghbmV3SGFzaCkge1xuICAgICAgdGhpcy5sb2dnZXIud2FybihgWyR7dXJsLm5hbWV9XSDjga7jg4/jg4Pjgrfjg6XlgKTjgpLlj5blvpfjgafjgY3jgb7jgZvjgpPjgafjgZfjgZ/jgIJgKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBvbGRIYXNoID0gdXJsLmNvbnRlbnRIYXNoO1xuICAgIHRoaXMubG9nZ2VyLmxvZyhcbiAgICAgIGBbJHt1cmwubmFtZX1dIOWPpOOBhOODj+ODg+OCt+ODpTogJHtvbGRIYXNoID8gb2xkSGFzaC5zdWJzdHJpbmcoMCwgMTApIDogJ+OBquOBlyd9Li4uYCxcbiAgICApO1xuICAgIHRoaXMubG9nZ2VyLmxvZyhcbiAgICAgIGBbJHt1cmwubmFtZX1dIOaWsOOBl+OBhOODj+ODg+OCt+ODpTogJHtuZXdIYXNoLnN1YnN0cmluZygwLCAxMCl9Li4uYCxcbiAgICApO1xuXG4gICAgaWYgKG9sZEhhc2ggIT09IG5ld0hhc2gpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmxvZyhg4piF4piF4piF4piF4piFIFske3VybC5uYW1lfV0g5aSJ5pu044KS5qSc55+l44GX44G+44GX44Gf77yBIOKYheKYheKYheKYheKYhWApO1xuICAgICAgYXdhaXQgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLnNlbmROb3RpZmljYXRpb24oXG4gICAgICAgIGDjgJDjgr3jgq/jg5bjg4TpgJ/loLHjgJFcXG7nianku7bjgavmlrDnnYDjga7lj6/og73mgKfjgYzjgYLjgorjgb7jgZnvvIFcXG5cXG7nianku7blkI06ICR7dXJsLm5hbWV9XFxuVVJMOiAke3VybC51cmx9YCxcbiAgICAgICk7XG4gICAgICBhd2FpdCB0aGlzLnVybFNlcnZpY2UudXBkYXRlSGFzaCh1cmwuaWQsIG5ld0hhc2gpO1xuICAgICAgdGhpcy5sb2dnZXIubG9nKGBbJHt1cmwubmFtZX1dIOOBruODj+ODg+OCt+ODpeWApOOCkuabtOaWsOOBl+OBvuOBl+OBn+OAgmApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmxvZ2dlci5sb2coYFske3VybC5uYW1lfV0g5aSJ5pu044Gv44GC44KK44G+44Gb44KT44Gn44GX44Gf44CCYCk7XG4gICAgfVxuICB9XG59XG4iXSwidmVyc2lvbiI6M30=