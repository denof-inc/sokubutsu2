{"file":"/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/test/setup.ts","mappings":";AAAA,qBAAqB;;;AAErB,cAAc;AACd,SAAS,CAAC,KAAK,IAAI,EAAE;IACnB,eAAe;IACf,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;IAClB,mBAAmB;IACnB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,iBAAiB;AACjB,UAAU,CAAC,GAAG,EAAE;IACd,WAAW;IACX,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,CAAC,CAAC,CAAC;AAEH,eAAe;AACf,MAAM,CAAC,MAAM,CAAC;IACZ,YAAY,CAAC,QAAgB;QAC3B,IAAI,CAAC;YACH,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC;YAClB,OAAO;gBACL,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,QAAQ,wBAAwB;gBAC3D,IAAI,EAAE,IAAI;aACX,CAAC;QACJ,CAAC;QAAC,MAAM,CAAC;YACP,OAAO;gBACL,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,QAAQ,oBAAoB;gBACvD,IAAI,EAAE,KAAK;aACZ,CAAC;QACJ,CAAC;IACH,CAAC;CACF,CAAC,CAAC;AAYH,iBAAiB;AACV,MAAM,cAAc,GAAG,GAAG,EAAE,CAAC,CAAC;IACnC,EAAE,EAAE,GAAG;IACP,UAAU,EAAE,WAAW;IACvB,QAAQ,EAAE,UAAU;IACpB,SAAS,EAAE,MAAM;IACjB,QAAQ,EAAE,IAAI;IACd,SAAS,EAAE,IAAI,IAAI,EAAE;IACrB,YAAY,EAAE,IAAI,IAAI,EAAE;CACzB,CAAC,CAAC;AARU,QAAA,cAAc,kBAQxB;AAEI,MAAM,aAAa,GAAG,GAAG,EAAE,CAAC,CAAC;IAClC,EAAE,EAAE,GAAG;IACP,MAAM,EAAE,WAAW;IACnB,GAAG,EAAE,qBAAqB;IAC1B,IAAI,EAAE,QAAQ;IACd,QAAQ,EAAE,IAAI;IACd,SAAS,EAAE,IAAI,IAAI,EAAE;IACrB,aAAa,EAAE,IAAI,IAAI,EAAE;IACzB,cAAc,EAAE,IAAI,IAAI,EAAE;CAC3B,CAAC,CAAC;AATU,QAAA,aAAa,iBASvB;AAEH,eAAe;AACR,MAAM,OAAO,GAAG,CAAC,EAAU,EAAE,EAAE,CACpC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AADvC,QAAA,OAAO,WACgC;AAEpD,gBAAgB;AACT,MAAM,oBAAoB,GAAG,GAAG,EAAE,CAAC,CAAC;IACzC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;IACf,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;IAClB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;IACf,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;IACjB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;IACjB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;IACjB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;CAClB,CAAC,CAAC;AARU,QAAA,oBAAoB,wBAQ9B;AAEI,MAAM,iBAAiB,GAAG,GAAG,EAAE,CAAC,CAAC;IACtC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;IAClB,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;IAClB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;IACjB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;IACjB,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;CAClB,CAAC,CAAC;AANU,QAAA,iBAAiB,qBAM3B","names":[],"sources":["/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/test/setup.ts"],"sourcesContent":["// Jest テストセットアップファイル\n\n// グローバルなテスト設定\nbeforeAll(async () => {\n  // テスト開始前の初期化処理\n  console.log('🧪 テスト環境を初期化中...');\n});\n\nafterAll(async () => {\n  // テスト終了後のクリーンアップ処理\n  console.log('🧹 テスト環境をクリーンアップ中...');\n});\n\n// 各テストファイル実行前の処理\nbeforeEach(() => {\n  // モックのリセット\n  jest.clearAllMocks();\n});\n\n// カスタムマッチャーの追加\nexpect.extend({\n  toBeValidUrl(received: string) {\n    try {\n      new URL(received);\n      return {\n        message: () => `expected ${received} not to be a valid URL`,\n        pass: true,\n      };\n    } catch {\n      return {\n        message: () => `expected ${received} to be a valid URL`,\n        pass: false,\n      };\n    }\n  },\n});\n\n// TypeScript型定義の拡張\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace jest {\n    interface Matchers<R> {\n      toBeValidUrl(): R;\n    }\n  }\n}\n\n// テスト用のユーティリティ関数\nexport const createMockUser = () => ({\n  id: '1',\n  telegramId: '123456789',\n  username: 'testuser',\n  firstName: 'Test',\n  isActive: true,\n  createdAt: new Date(),\n  lastActiveAt: new Date(),\n});\n\nexport const createMockUrl = () => ({\n  id: '1',\n  userId: '123456789',\n  url: 'https://example.com',\n  name: 'テストURL',\n  isActive: true,\n  createdAt: new Date(),\n  lastCheckedAt: new Date(),\n  lastNotifiedAt: new Date(),\n});\n\n// 非同期テスト用のヘルパー\nexport const waitFor = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n\n// モック用のファクトリー関数\nexport const createMockRepository = () => ({\n  find: jest.fn(),\n  findOne: jest.fn(),\n  save: jest.fn(),\n  remove: jest.fn(),\n  create: jest.fn(),\n  update: jest.fn(),\n  delete: jest.fn(),\n});\n\nexport const createMockService = () => ({\n  findAll: jest.fn(),\n  findOne: jest.fn(),\n  create: jest.fn(),\n  update: jest.fn(),\n  remove: jest.fn(),\n});\n"],"version":3}