{"file":"/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/src/features/scraping/scraping.service.ts","mappings":"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","names":[],"sources":["/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/src/features/scraping/scraping.service.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\nimport { chromium, Browser } from 'playwright';\nimport axios from 'axios';\nimport * as cheerio from 'cheerio';\nimport { JSDOM } from 'jsdom';\nimport * as crypto from 'crypto';\nimport { BotProtectionService } from '../bot-protection/bot-protection.service';\nimport { botProtectionConfig } from '../../core/config/bot-protection.config';\n\ninterface ScrapeResult {\n  hash: string | null;\n  method: 'http' | 'jsdom' | 'playwright' | 'google-playwright';\n  error?: string;\n  success?: boolean;\n}\n\ninterface ScrapeOptions {\n  useGoogleSearch?: boolean;\n  searchQuery?: string;\n  testBotDetection?: boolean;\n}\n\ninterface RetryConfig {\n  maxRetries: number;\n  baseDelay: number;\n  maxDelay: number;\n  backoffMultiplier: number;\n}\n\ntype ErrorType = 'RECOVERABLE' | 'UNRECOVERABLE' | 'BOT_DETECTED';\n\n@Injectable()\nexport class ScrapingService {\n  private readonly logger = new Logger(ScrapingService.name);\n\n  constructor(private readonly botProtectionService: BotProtectionService) {}\n\n  async scrapeAndGetHash(\n    url: string,\n    selector: string,\n    options: ScrapeOptions = {},\n  ): Promise<string | null> {\n    const domain = new URL(url).hostname;\n\n    // Bot検知テストを実行（オプション）\n    if (options.testBotDetection) {\n      const detectionResult = await this.testBotDetection(url, selector);\n      this.logger.log(`Bot detection test for ${domain}:`, detectionResult);\n    }\n\n    // リトライ設定\n    const retryConfig: RetryConfig = {\n      maxRetries: 3,\n      baseDelay: 1000,\n      maxDelay: 30000,\n      backoffMultiplier: 2,\n    };\n\n    try {\n      return await this.scrapeWithRetry(url, selector, options, retryConfig);\n    } catch (error) {\n      this.logger.error(\n        `[${url}] スクレイピング完全失敗: ${error instanceof Error ? error.message : String(error)}`,\n      );\n      return null;\n    }\n  }\n\n  private async scrapeWithRetry(\n    url: string,\n    selector: string,\n    options: ScrapeOptions,\n    config: RetryConfig,\n  ): Promise<string | null> {\n    let lastError: Error | undefined;\n\n    for (let attempt = 1; attempt <= config.maxRetries; attempt++) {\n      try {\n        // Google経由アクセスが必要な場合\n        if (options.useGoogleSearch && options.searchQuery) {\n          const success = await this.botProtectionService.accessViaGoogle(\n            url,\n            options.searchQuery,\n          );\n          if (success) {\n            const result = await this.scrapeWithPlaywrightSession(\n              url,\n              selector,\n            );\n            if (result.hash) {\n              return result.hash;\n            }\n          }\n        }\n\n        // 通常の段階的スクレイピング\n        const result = await this.scrapeWithStrategy(url, selector);\n\n        if (result.hash) {\n          this.logger.log(\n            `[${url}] スクレイピング成功 (方法: ${result.method})`,\n          );\n          return result.hash;\n        }\n\n        // エラー分類\n        const errorType = this.classifyError(result.error || 'Unknown error');\n\n        // 回復不可能なエラーの場合は即座に失敗\n        if (errorType === 'UNRECOVERABLE') {\n          throw new Error(`回復不可能なエラー: ${String(result.error)}`);\n        }\n\n        // リトライ可能なエラーの場合は待機後に再試行\n        if (attempt < config.maxRetries) {\n          const delay = Math.min(\n            config.baseDelay * Math.pow(config.backoffMultiplier, attempt - 1),\n            config.maxDelay,\n          );\n\n          this.logger.warn(\n            `スクレイピング失敗 (試行 ${String(attempt)}/${String(config.maxRetries)}): ${String(result.error)}. ${String(delay)}ms後に再試行`,\n          );\n          await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n      } catch (error) {\n        lastError = error;\n\n        if (attempt < config.maxRetries) {\n          const delay = Math.min(\n            config.baseDelay * Math.pow(config.backoffMultiplier, attempt - 1),\n            config.maxDelay,\n          );\n\n          this.logger.warn(\n            `スクレイピング例外 (試行 ${String(attempt)}/${String(config.maxRetries)}): ${error instanceof Error ? error.message : String(error)}. ${String(delay)}ms後に再試行`,\n          );\n          await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n      }\n    }\n\n    throw new Error(\n      `全ての再試行が失敗: ${lastError?.message || 'Unknown error'}`,\n    );\n  }\n\n  private async scrapeWithStrategy(\n    url: string,\n    selector: string,\n  ): Promise<ScrapeResult> {\n    const domain = new URL(url).hostname;\n\n    // 第1段階: HTTP + Cheerio\n    try {\n      this.logger.debug(`[${url}] 第1段階: HTTP + Cheerioでスクレイピング`);\n      const hash = await this.scrapeWithHttp(url, selector);\n      if (hash) {\n        // 成功時はレート制限を緩和\n        this.botProtectionService.getAdaptiveDelay(domain, false);\n        return { hash, method: 'http' };\n      }\n    } catch (error) {\n      this.logger.warn(\n        `[${url}] HTTP + Cheerio失敗: ${error instanceof Error ? error.message : String(error)}`,\n      );\n      // エラー時はレート制限を強化\n      this.botProtectionService.getAdaptiveDelay(domain, true);\n    }\n\n    // 第2段階: JSDOM\n    try {\n      this.logger.debug(`[${url}] 第2段階: JSDOMでスクレイピング`);\n      const hash = await this.scrapeWithJsdom(url, selector);\n      if (hash) {\n        this.botProtectionService.getAdaptiveDelay(domain, false);\n        return { hash, method: 'jsdom' };\n      }\n    } catch (error) {\n      this.logger.warn(\n        `[${url}] JSDOM失敗: ${error instanceof Error ? error.message : String(error)}`,\n      );\n      this.botProtectionService.getAdaptiveDelay(domain, true);\n    }\n\n    // 第3段階: Playwright\n    try {\n      this.logger.debug(`[${url}] 第3段階: Playwrightでスクレイピング`);\n      const hash = await this.scrapeWithPlaywright(url, selector);\n      if (hash) {\n        this.botProtectionService.getAdaptiveDelay(domain, false);\n        return { hash, method: 'playwright' };\n      }\n    } catch (error) {\n      this.logger.error(\n        `[${url}] Playwright失敗: ${error instanceof Error ? error.message : String(error)}`,\n      );\n      this.botProtectionService.getAdaptiveDelay(domain, true);\n    }\n\n    return { hash: null, method: 'playwright', error: 'All methods failed' };\n  }\n\n  private async scrapeWithHttp(\n    url: string,\n    selector: string,\n  ): Promise<string | null> {\n    const userAgent = this.getRandomUserAgent();\n    const domain = new URL(url).hostname;\n\n    // 適応的レート制限による遅延\n    const delay = this.botProtectionService.getAdaptiveDelay(domain);\n    await new Promise((resolve) => setTimeout(resolve, delay));\n\n    const response = await axios.get(url, {\n      headers: {\n        'User-Agent': userAgent,\n        ...botProtectionConfig.headers,\n      },\n      timeout: botProtectionConfig.timeouts.http,\n    });\n\n    const $ = cheerio.load(response.data);\n    const element = $(selector);\n\n    if (!element.length) {\n      throw new Error(`セレクタ \"${selector}\" が見つかりませんでした`);\n    }\n\n    const content = element.html();\n    if (!content) {\n      throw new Error('コンテンツが空です');\n    }\n\n    return crypto.createHash('sha256').update(content).digest('hex');\n  }\n\n  private async scrapeWithJsdom(\n    url: string,\n    selector: string,\n  ): Promise<string | null> {\n    const userAgent = this.getRandomUserAgent();\n    const domain = new URL(url).hostname;\n\n    // 適応的レート制限による遅延\n    const delay = this.botProtectionService.getAdaptiveDelay(domain);\n    await new Promise((resolve) => setTimeout(resolve, delay));\n\n    const dom = await JSDOM.fromURL(url, {\n      userAgent,\n      runScripts: 'dangerously',\n      resources: 'usable',\n      pretendToBeVisual: true,\n    });\n\n    // JavaScriptの実行を少し待つ\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n\n    const element = dom.window.document.querySelector(selector);\n    if (!element) {\n      throw new Error(`セレクタ \"${selector}\" が見つかりませんでした`);\n    }\n\n    const content = element.innerHTML;\n    if (!content) {\n      throw new Error('コンテンツが空です');\n    }\n\n    dom.window.close();\n    return crypto.createHash('sha256').update(content).digest('hex');\n  }\n\n  private async scrapeWithPlaywright(\n    url: string,\n    selector: string,\n  ): Promise<string | null> {\n    let browser: Browser | null = null;\n    const domain = new URL(url).hostname;\n\n    try {\n      // 適応的レート制限による遅延\n      const delay = this.botProtectionService.getAdaptiveDelay(domain);\n      await new Promise((resolve) => setTimeout(resolve, delay));\n\n      browser = await chromium.launch({\n        headless: true,\n        args: botProtectionConfig.playwrightOptions.args,\n      });\n\n      const page = await browser.newPage({\n        userAgent: this.getRandomUserAgent(),\n      });\n\n      // Bot検知回避のための設定\n      await page.setExtraHTTPHeaders({\n        'Accept-Language': 'ja,en-US;q=0.9,en;q=0.8',\n      });\n\n      await page.goto(url, {\n        waitUntil: 'domcontentloaded',\n        timeout: 30000,\n      });\n\n      await page.waitForSelector(selector, { timeout: 30000 });\n\n      const element = await page.$(selector);\n      if (!element) {\n        throw new Error(`セレクタ \"${selector}\" が見つかりませんでした`);\n      }\n\n      const content = await element.innerHTML();\n      if (!content) {\n        throw new Error('コンテンツが空です');\n      }\n\n      return crypto.createHash('sha256').update(content).digest('hex');\n    } finally {\n      if (browser) {\n        await browser.close();\n      }\n    }\n  }\n\n  private async randomDelay(min: number, max: number): Promise<void> {\n    const delay = Math.floor(Math.random() * (max - min + 1)) + min;\n    await new Promise((resolve) => setTimeout(resolve, delay));\n  }\n\n  /**\n   * Bot検知テストを実行\n   */\n  private async testBotDetection(\n    url: string,\n    selector: string,\n  ): Promise<{\n    httpAccessible: boolean;\n    jsdomAccessible: boolean;\n    playwrightAccessible: boolean;\n  }> {\n    const results = {\n      httpAccessible: false,\n      jsdomAccessible: false,\n      playwrightAccessible: false,\n    };\n\n    // HTTP テスト\n    try {\n      await this.scrapeWithHttp(url, selector);\n      results.httpAccessible = true;\n    } catch (error) {\n      this.logger.debug(\n        `HTTP test failed: ${error instanceof Error ? error.message : String(error)}`,\n      );\n    }\n\n    // JSDOM テスト\n    try {\n      await this.scrapeWithJsdom(url, selector);\n      results.jsdomAccessible = true;\n    } catch (error) {\n      this.logger.debug(\n        `JSDOM test failed: ${error instanceof Error ? error.message : String(error)}`,\n      );\n    }\n\n    // Playwright テスト\n    try {\n      await this.scrapeWithPlaywright(url, selector);\n      results.playwrightAccessible = true;\n    } catch (error) {\n      this.logger.debug(\n        `Playwright test failed: ${error instanceof Error ? error.message : String(error)}`,\n      );\n    }\n\n    return results;\n  }\n\n  /**\n   * セッション管理されたPlaywrightでスクレイピング\n   */\n  private async scrapeWithPlaywrightSession(\n    url: string,\n    selector: string,\n  ): Promise<ScrapeResult> {\n    const domain = new URL(url).hostname;\n\n    try {\n      const context =\n        await this.botProtectionService.getOrCreateSession(domain);\n      const page = await context.newPage();\n\n      try {\n        // Cookieを復元\n        await this.botProtectionService.restoreCookies(domain);\n\n        await page.goto(url, {\n          waitUntil: 'domcontentloaded',\n          timeout: 30000,\n        });\n\n        await page.waitForSelector(selector, { timeout: 30000 });\n\n        const element = await page.$(selector);\n        if (!element) {\n          throw new Error(`セレクタ \"${selector}\" が見つかりませんでした`);\n        }\n\n        const content = await element.innerHTML();\n        if (!content) {\n          throw new Error('コンテンツが空です');\n        }\n\n        // Cookieを保存\n        await this.botProtectionService.saveCookies(domain);\n\n        const hash = crypto.createHash('sha256').update(content).digest('hex');\n        return { hash, method: 'google-playwright' };\n      } finally {\n        await page.close();\n      }\n    } catch (error) {\n      this.logger.error(\n        `Session-based Playwright失敗: ${error instanceof Error ? error.message : String(error)}`,\n      );\n      return {\n        hash: null,\n        method: 'google-playwright',\n        error: error instanceof Error ? error.message : String(error),\n      };\n    }\n  }\n\n  private getRandomUserAgent(): string {\n    return botProtectionConfig.userAgents[\n      Math.floor(Math.random() * botProtectionConfig.userAgents.length)\n    ];\n  }\n\n  private classifyError(error: string): ErrorType {\n    // 405 Method Not Allowed - Bot対策の可能性が高い\n    if (error.includes('405') || error.includes('Method Not Allowed')) {\n      return 'BOT_DETECTED';\n    }\n\n    // タイムアウト系エラー - 一時的な問題の可能性\n    if (error.includes('timeout') || error.includes('Timeout')) {\n      return 'RECOVERABLE';\n    }\n\n    // ネットワーク系エラー - 一時的な問題の可能性\n    if (error.includes('ECONNRESET') || error.includes('ENOTFOUND')) {\n      return 'RECOVERABLE';\n    }\n\n    // セレクタ待機失敗 - サイト構造変更の可能性\n    if (\n      error.includes('waiting for selector') ||\n      error.includes('が見つかりませんでした')\n    ) {\n      return 'UNRECOVERABLE';\n    }\n\n    // その他のエラー - 回復可能として扱う\n    return 'RECOVERABLE';\n  }\n}\n"],"version":3}