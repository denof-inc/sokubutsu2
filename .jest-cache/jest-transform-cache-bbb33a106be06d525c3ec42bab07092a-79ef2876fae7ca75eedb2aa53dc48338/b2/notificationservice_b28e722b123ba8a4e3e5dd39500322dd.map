{"file":"/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/src/features/notification/notification.service.ts","mappings":";;;;;;;;;;;;;AAAA,2CAAoD;AACpD,2CAA+C;AAC/C,uCAAoC;AAG7B,IAAM,mBAAmB,2BAAzB,MAAM,mBAAmB;IAKV;IAJH,MAAM,GAAG,IAAI,eAAM,CAAC,qBAAmB,CAAC,IAAI,CAAC,CAAC;IACvD,GAAG,CAAW;IACd,MAAM,CAAS;IAEvB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,oBAAoB,CAAC,CAAC;QACnE,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAS,kBAAkB,CAAC,CAAC;QAElE,mBAAmB;QACnB,0BAA0B;QAC1B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YACtB,MAAM,YAAY,GAChB,4CAA4C,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAChC,8BAA8B;YAC9B,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC;QACD,mBAAmB;QAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,mBAAQ,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,qBAAqB;IAC7C,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,OAAe;QACpC,IAAI,CAAC;YACH,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,OAAO,EAAE,CAAC,CAAC;QAC3C,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;CACF,CAAA;AAhCY,kDAAmB;8BAAnB,mBAAmB;IAD/B,IAAA,mBAAU,GAAE;qCAMwB,sBAAa;GALrC,mBAAmB,CAgC/B","names":[],"sources":["/Users/tttela/Documents/Work/denof/works/250529sokubutsu/dev2/src/features/notification/notification.service.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Telegraf } from 'telegraf';\n\n@Injectable()\nexport class NotificationService {\n  private readonly logger = new Logger(NotificationService.name);\n  private bot: Telegraf;\n  private chatId: string;\n\n  constructor(private configService: ConfigService) {\n    const token = this.configService.get<string>('TELEGRAM_BOT_TOKEN');\n    const chatId = this.configService.get<string>('TELEGRAM_CHAT_ID');\n\n    // ★★★ ここからが修正点 ★★★\n    // 環境変数が設定されているか、厳密にチェックする\n    if (!token || !chatId) {\n      const errorMessage =\n        'TelegramのトークンまたはチャットIDが.envファイルに設定されていません。';\n      this.logger.error(errorMessage);\n      // エラーを投げて、アプリケーションの起動を安全に中止する\n      throw new Error(errorMessage);\n    }\n    // ★★★ ここまでが修正点 ★★★\n\n    this.bot = new Telegraf(token);\n    this.chatId = chatId; // チェック済みなので、安全に代入できる\n  }\n\n  async sendNotification(message: string) {\n    try {\n      await this.bot.telegram.sendMessage(this.chatId, message);\n      this.logger.log(`通知を送信しました: ${message}`);\n    } catch (error) {\n      this.logger.error('Telegram通知の送信に失敗しました。', error);\n    }\n  }\n}\n"],"version":3}